(function(u,s){typeof exports=="object"&&typeof module<"u"?s(exports):typeof define=="function"&&define.amd?define(["exports"],s):(u=typeof globalThis<"u"?globalThis:u||self,s(u["j-upsert"]={}))})(this,function(u){"use strict";function s(t,e=null){return{"$$@@@@__upsert_hook":{value:t,index:e,isFunction:typeof t=="function"}}}function r({obj:t},e,o=[],f=!1){let n=[];for(let l in t){let i=t[l];if(l===e&&(i??!1))n.push({index:[...o,...i.index??[]],value:i.value,isFunction:i.isFunction});else if(typeof i=="object"){const _=r({obj:i},e,[...o,l],!0);n=n.concat(_.obj)}}return f?{obj:n}:{result:n}}function c(t,e,o,f=!1){if(e.length==1)return t[e[0]]=f?o(t[e[0]]):o,t;let n=(t??[])[e[0]]??!1;if(!n){let l=p(e,o,f);return t[e[0]]=l,t}return e.shift(),c(n,e,o,f)}function p(t,e,o=!1){let f=[...t],n;return f.length==1?n=o?e({}):e:(n={},f.shift(),n[f[0]]=p(f,e)),n}function h(t,e){let{result:o}=r({obj:e},"$$@@@@__upsert_hook");for(let f=0;f<o.length;f++){let n=o[f];c(t,n.index,n.value,n.isFunction)}return t}u.set=s,u.upsert=h,Object.defineProperty(u,Symbol.toStringTag,{value:"Module"})});
